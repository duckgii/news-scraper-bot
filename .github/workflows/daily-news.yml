name: Daily Econ News (KST 08:00)

on:
  schedule:
    - cron: "0 23 * * *"   # 08:00 KST (UTC 23:00)
  workflow_dispatch: {}

jobs:
  run:
    runs-on: ubuntu-latest
    environment: "전체 환경변수"   # 또는 영기님이 만든 Environment 이름 (예: "프로덕션", "테스트" 등)
    env:
      TZ: Asia/Seoul
      NAVER_CLIENT_ID: ${{ secrets.NAVER_CLIENT_ID }}
      NAVER_CLIENT_SECRET: ${{ secrets.NAVER_CLIENT_SECRET }}
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      NOTION_TOKEN: ${{ secrets.NOTION_TOKEN }}
      NOTION_PARENT_PAGE_ID: ${{ secrets.NOTION_PARENT_PAGE_ID }}
    timeout-minutes: 30

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Show repo tree (debug)
        run: |
          pwd
          ls -al

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install system deps (for lxml/newspaper3k)
        run: |
          sudo apt-get update
          sudo apt-get install -y libxml2-dev libxslt1-dev zlib1g-dev

      - name: Install Python deps
        run: |
          pip install --upgrade pip
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          else
            pip install python-dotenv requests scikit-learn rapidfuzz newspaper3k openai "lxml[html_clean]"
          fi
          python - << 'PY'
          import nltk
          try:
              nltk.download('punkt', quiet=True)
              print("nltk punkt OK")
          except Exception as e:
              print("nltk download warning:", e)
          PY

      - name: Run pipeline (naver_econ_news.py)
        run: python -u naver_econ_news.py

      - name: Push to Notion (create daily page)
        run: python -u push_notion_daily.py

      - name: Upload artifacts (result JSON/logs)
        uses: actions/upload-artifact@v4
        with:
          name: econ-popular-output
          path: |
            naver_econ_news.json
            daily.log
          if-no-files-found: ignore